#!/usr/bin/env zsh

GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
RESET="\033[0m"

usage() {
	echo "usage: git deploy <branch>"
	echo
	echo "Tags and push against both origin and deploy remotes for the specified branch."
	echo -e "The next tag format will be "$YELLOW$(getcurrenttag)$RESET
}

getcurrenttag() {
	echo $(getcurrentbranchtag)"-"$(date +%Y%m%d)"-"$(getcounter)"-"$USER
}

getcounter() {
	current_tag=$(getcurrentbranchtag)
	today=$(date +%Y%m%d)
	current_count=$(git tag | grep $current_tag"-"$today | wc -l)
	printf "%02d" $((current_count + 1))
}

getcurrentbranch() {
	echo $(git branch | grep "^*" | awk '{print $2}')
}

getcurrentbranchtag() {
	branch=$(getcurrentbranch)

	if [[ -n $extra_branch ]]; then
		typeset -A extra_branch_hash
		extra_branch_hash=(${=extra_branch})
		if [[ -n ${extra_branch_hash[$branch]} ]]; then
			echo $extra_branch_hash[$branch]
			return
		fi
	fi

	case "$branch" in
		master)
			echo "prod"
		;;

		stage)
			echo "stage"
		;;

		*)
			echo "You are in an undeployable branch '$RED$branch$RESET'. Please switch to either master or stage" 1&>2
			exit 1
		;;
	esac
}

main() {
	if [ $# -lt 1 ]; then
		usage
		exit 1
	fi

	getcurrentbranchtag > /dev/null

	if [ $1 != $(getcurrentbranch) ]; then
		echo "${RED}Please specify the current branch$RESET"
		exit 1
	fi

	echo "Tagging $GREEN"$(getcurrenttag)$RESET
	git tag $(getcurrenttag)

	# check and eventually push to origin
	if [ $(git remote -v | grep "origin" | wc -l) -gt 0 ]; then
		git push --tags origin $1
	else
		echo "${GREEN}origin${RESET} not present. Not pushing."
	fi

	# check and eventually push to deploy
	if [ $(git remote -v | grep "deploy" | wc -l) -gt 0 ]; then
		git push --tags deploy $1
	else
		echo "${GREEN}deploy${RESET} not present. Not pushing."
	fi

}

main "$@"
